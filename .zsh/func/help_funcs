## Help functions
##   by gianu

## who did this shit?
whodunnit () {
    git ls-tree -r -l --name-only HEAD -- $1 | xargs -n1 git blame --line-porcelain HEAD | grep  "^author " | sed -n 's/^author //p' | grep -v "Not Committed Yet" | sort | uniq -c | sort -nr
}

## Get the top commiters of a git repo
topcommiters() {
  echo "$(git shortlog -sn)"
}

## Change the title of the tab
chtitle() {
  echo -ne "\e]1;${1}\a"
}


## -------------------- KAPOW ! -------------------
##        restart pow applications

rack_root_detect() {
  setopt chaselinks
  local orgdir=$(pwd)
  local basedir=$(pwd)

  while [[ $basedir != '/' ]]; do
    test -e "$basedir/config.ru" && break
    builtin cd ".." 2>/dev/null
    basedir="$(pwd)"
  done

  builtin cd $orgdir 2>/dev/null
  [[ ${basedir} == "/" ]] && return 1
  echo `basename $basedir | sed -E "s/.(com|net|org)//"`
}

kapow() {
  local vhost=$1
  [ ! -n "$vhost" ] && vhost=$(rack_root_detect)
  if [ ! -h ~/.pow/$vhost ]
  then
    echo "pow: This domain isn't set up yet. Symlink your application to ${vhost} first."
  fi

  [ ! -d ~/.pow/${vhost}/tmp ] && mkdir -p ~/.pow/$vhost/tmp
  touch ~/.pow/$vhost/tmp/restart.txt;
  [ $? -eq -0 ] && echo "pow: restarting $vhost.dev"
}

compctl -W ~/.pow -/ kapow

powit() {
  local basedir=$(pwd)
  local vhost=$1
  [ ! -n "$vhost" ] && vhost=$(rack_root_detect)
  if [ ! -h ~/.pow/$vhost ]
  then
    echo "pow: Symlinking your app with pow. ${vhost}"
    [ ! -d ~/.pow/$vhost ] && ln -s $basedir ~/.pow/$vhost
    return 1
  fi
}

# View the standard out (puts) from any pow app
alias kaput="tail -f ~/Library/Logs/Pow/apps/*"

## ---------------- END OF KAPOW! -----------------
# vim:set ft=zsh:
